/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.exam.utilities;

import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import lk.ijse.exam.view.QuestionsPanel;

/**
 *
 * @author Imalka Gunawardana
 */
public class AnswerPanel extends javax.swing.JPanel {

    private static HashMap<String, List<String>> answersWithNo;
    private static HashMap<String, List<String>> givenAnswers;

    /**
     * Creates new form AnswerPanel
     */
    public AnswerPanel(char letter) {
        initComponents();
        setSize(540, 30);
        setVisible(true);
        rdbSelect.setText(" " + letter);
    }

    public static void setAnswersWithNo(HashMap<String, List<String>> answers) {
        answersWithNo = answers;
        givenAnswers = new HashMap<>();
        Set<String> keySet = answersWithNo.keySet();
        for (String string : keySet) {
            givenAnswers.put(string, new ArrayList<>());
        }
    }

    public static int getCalculatedMarks() {
        if (answersWithNo != null && givenAnswers != null) {
            double marks = 0;
            Set<String> keySet = answersWithNo.keySet();
            for (String string : keySet) {
                LinkedHashSet<String> set1 = new LinkedHashSet<>();
                LinkedHashSet<String> set2 = new LinkedHashSet<>();
                List<String> answersSet = answersWithNo.get(string);
                List<String> givenAnswersSet = givenAnswers.get(string);
                for (String answer : answersSet) {
                    set1.add(answer.trim());
                }
                for (String answer : givenAnswersSet) {
                    set2.add(answer.trim());
                }
                if (set1.equals(set2)) {
                    marks++;
                }
            }
            marks = (marks / keySet.size()) * 100;
            return (int) marks;
        }
        return 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdbSelect = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(58, 58, 58));
        setLayout(null);

        rdbSelect.setBackground(new java.awt.Color(58, 58, 58));
        rdbSelect.setFont(new java.awt.Font("Consolas", 1, 30)); // NOI18N
        rdbSelect.setForeground(new java.awt.Color(255, 255, 255));
        rdbSelect.setOpaque(false);
        rdbSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbSelectActionPerformed(evt);
            }
        });
        add(rdbSelect);
        rdbSelect.setBounds(150, 10, 250, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void rdbSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbSelectActionPerformed
        String currentQuestion = QuestionsPanel.getInstance().getCurrentQuestion();
        List<String> answersSet = givenAnswers.get(currentQuestion);
        if (rdbSelect.isSelected()) {
            rdbSelect.setForeground(new Color(255, 144, 35));
            answersSet.add(rdbSelect.getText());
        } else {
            rdbSelect.setForeground(Color.WHITE);
            answersSet.remove(rdbSelect.getText());
        }
    }//GEN-LAST:event_rdbSelectActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton rdbSelect;
    // End of variables declaration//GEN-END:variables

}
